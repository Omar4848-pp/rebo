const utils = require("../utils");
const log = require("npmlog");

let isBehavior = false;

async function bypassAutoBehavior(resp, jar, globalOptions, appstate, ID) {
    try {
        let UID;
        
        if (appstate && Array.isArray(appstate)) {
            const appstateCUser = appstate.find(i => i.key === 'c_user') || appstate.find(i => i.key === 'i_user');
            UID = appstateCUser ? appstateCUser.value : ID;
        } else {
            UID = ID;
        }

        if (!UID) {
            const cookies = jar.getCookies("https://www.facebook.com");
            const userCookie = cookies.find(cookie => cookie.key === 'c_user' || cookie.key === 'i_user');
            UID = userCookie ? userCookie.value : null;
        }

        if (!UID) {
            log.warn("login", "Could not determine User ID for bypass check");
            return resp;
        }

        const FormBypass = {
            av: UID,
            fb_api_caller_class: "RelayModern",
            fb_api_req_friendly_name: "FBScrapingWarningMutation",
            variables: JSON.stringify({}),
            server_timestamps: true,
            doc_id: 6339492849481770
        };

        const warning = () => {
            log.warn("login", `We suspect automated behavior on your account: ${UID}`);
            if (!isBehavior) isBehavior = true;
        };

        const success = () => {
            log.info("login", `Successfully bypassed automation detection for UID: ${UID}`);
        };

        if (resp) {
            if (resp.request.uri && resp.request.uri.href.includes("https://www.facebook.com/checkpoint/")) {
                if (resp.request.uri.href.includes('601051028565049')) {
                    const fb_dtsg = utils.getFrom(resp.body, '["DTSGInitData",[],{"token":"', '","');
                    const jazoest = utils.getFrom(resp.body, 'jazoest=', '",');
                    const lsd = utils.getFrom(resp.body, "[\"LSD\",[],{\"token\":\"", "\"}");

                    return utils.post("https://www.facebook.com/api/graphql/", jar, {
                        ...FormBypass,
                        fb_dtsg,
                        jazoest,
                        lsd
                    }, globalOptions)
                    .then(utils.saveCookies(jar))
                    .then(res => {
                        warning();
                        success();
                        return res;
                    });
                }
                return resp;
            }
            return resp;
        }
        return null;
    } catch (error) {
        log.error("login", "Error:", error);
        return resp;
    }
}

module.exports = bypassAutoBehavior;


